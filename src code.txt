import java.util.*;

public class RatInMaze {

    public static void findPaths(int[][] maze, int n, int i, int j, boolean[][] visited, String path, ArrayList<String> paths) {
        
        if (i == n - 1 && j == n - 1) {
            paths.add(path);
            return;
        }

        if (i < 0 || j < 0 || i >= n || j >= n || maze[i][j] == 0 || visited[i][j]) {
            return;
        }

        visited[i][j] = true;

        findPaths(maze, n, i + 1, j, visited, path + "D", paths); // Down
        findPaths(maze, n, i, j - 1, visited, path + "L", paths); // Left
        findPaths(maze, n, i, j + 1, visited, path + "R", paths); // Right
        findPaths(maze, n, i - 1, j, visited, path + "U", paths); // Up

        visited[i][j] = false;
    }

    public static ArrayList<String> ratInMaze(int[][] maze, int n) {
        ArrayList<String> paths = new ArrayList<>();
        boolean[][] visited = new boolean[n][n];

        if (maze[0][0] == 1)
            findPaths(maze, n, 0, 0, visited, "", paths);

        return paths;
    }

    public static void main(String[] args) {
        int[][] maze = {
            {1, 0, 0, 0},
            {1, 1, 0, 1},
            {1, 1, 0, 0},
            {0, 1, 1, 1}
        };
        int n = maze.length;

        ArrayList<String> paths = ratInMaze(maze, n);
        if (paths.size() == 0) {
            System.out.println("No path found.");
        } else {
            System.out.println("All possible paths:");
            for (String path : paths) {
                System.out.println(path);
            }
        }
    }
}
